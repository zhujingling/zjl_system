<?xml version="1.0" encoding="utf-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
    		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
			http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.0.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">
	<!-- 自动扫描(自动注入) -->
	<context:component-scan base-package="com.zjlsystem.business;com.zjlsystem.business.*" />
	<bean id="log-filter" class="com.alibaba.druid.filter.logging.Log4jFilter">
		<property name="resultSetLogEnabled" value="true" />
	</bean>

	<!-- 配置数据源 -->

	<bean name="dataSourceMaster" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<property name="url" value="${jdbcMaster.url}" />
		<property name="username" value="${jdbcMaster.username}" />
		<property name="password" value="${jdbcMaster.password}" />
		<property name="initialSize" value="${jdbc.initialSize}" />
		<property name="minIdle" value="${jdbc.minIdle}" />
		<property name="maxActive" value="${jdbc.maxActive}" />
		<property name="maxWait" value="${jdbc.maxWait}" />
		<property name="timeBetweenEvictionRunsMillis" value="${jdbc.timeBetweenEvictionRunsMillis}" />
		<property name="minEvictableIdleTimeMillis" value="${jdbc.minEvictableIdleTimeMillis}" />
		<property name="validationQuery" value="${jdbc.validationQuery}" />
		<property name="testWhileIdle" value="${jdbc.testWhileIdle}" />
		<property name="testOnBorrow" value="${jdbc.testOnBorrow}" />
		<property name="testOnReturn" value="${jdbc.testOnReturn}" />
		<property name="removeAbandoned" value="${jdbc.removeAbandoned}" />
		<property name="removeAbandonedTimeout" value="${jdbc.removeAbandonedTimeout}" />
		<!-- <property name="logAbandoned" value="${jdbc.logAbandoned}" /> -->
		<property name="filters" value="${jdbc.filters}" />
		<!-- 关闭abanded连接时输出错误日志 -->
		<property name="logAbandoned" value="true" />
		<property name="proxyFilters">
			<list>
				<ref bean="log-filter" />
			</list>
		</property>

		<!-- 监控数据库 -->
		<!-- <property name="filters" value="stat" /> -->
		<!-- <property name="filters" value="mergeStat" /> -->
	</bean>
	<bean name="dataSourceSlave" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<property name="url" value="${jdbcSlave.url}" />
		<property name="username" value="${jdbcSlave.username}" />
		<property name="password" value="${jdbcSlave.password}" />
		<property name="initialSize" value="${jdbc.initialSize}" />
		<property name="minIdle" value="${jdbc.minIdle}" />
		<property name="maxActive" value="${jdbc.maxActive}" />
		<property name="maxWait" value="${jdbc.maxWait}" />
		<property name="timeBetweenEvictionRunsMillis" value="${jdbc.timeBetweenEvictionRunsMillis}" />
		<property name="minEvictableIdleTimeMillis" value="${jdbc.minEvictableIdleTimeMillis}" />
		<property name="validationQuery" value="${jdbc.validationQuery}" />
		<property name="testWhileIdle" value="${jdbc.testWhileIdle}" />
		<property name="testOnBorrow" value="${jdbc.testOnBorrow}" />
		<property name="testOnReturn" value="${jdbc.testOnReturn}" />
		<property name="removeAbandoned" value="${jdbc.removeAbandoned}" />
		<property name="removeAbandonedTimeout" value="${jdbc.removeAbandonedTimeout}" />
		<!-- <property name="logAbandoned" value="${jdbc.logAbandoned}" /> -->
		<property name="filters" value="${jdbc.filters}" />
		<!-- 关闭abanded连接时输出错误日志 -->
		<property name="logAbandoned" value="true" />
		<property name="proxyFilters">
			<list>
				<ref bean="log-filter" />
			</list>
		</property>

		<!-- 监控数据库 -->
		<!-- <property name="filters" value="stat" /> -->
		<!-- <property name="filters" value="mergeStat" /> -->
	</bean>

	<!--统一的dataSource -->
	<bean id="dynamicDataSource" class="com.zjlsystem.business.base.DynamicDataSource">
		<property name="targetDataSources">
			<map key-type="java.lang.String">
				<!--通过不同的key决定用哪个dataSource -->
				<entry value-ref="dataSourceMaster" key="dataSourceMaster"></entry>
				<entry value-ref="dataSourceSlave" key="dataSourceSlave"></entry>
			</map>
		</property>
		<!--设置默认的dataSource -->
		<property name="defaultTargetDataSource" ref="dataSourceMaster">
		</property>
	</bean>


	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dynamicDataSource" />
		<property name="mapperLocations">
			<list>
				<value>classpath:com/zjlsystem/data/mapper/*/*.xml</value>
			</list>
		</property>
	</bean>

	<!-- DAO接口所在包名，Spring会自动查找其下的类 -->
	<bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.zjlsystem.data.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dynamicDataSource" />
	</bean>
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="add*" />
			<tx:method name="update*" />
			<tx:method name="insert*" />
			<tx:method name="del*" />

			<tx:method name="*" read-only="true" />
		</tx:attributes>
	</tx:advice>
	<!-- AOP配置 -->
	<aop:config>
		<aop:pointcut id="myPointcut"
			expression="execution(* com.zjlsystem.business.*.impl.*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="myPointcut" />
	</aop:config>
</beans>
